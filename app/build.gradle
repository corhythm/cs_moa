plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "com.google.protobuf" version "0.8.12"
    id 'kotlin-parcelize'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.mju.csmoa"
        minSdk 24
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    dataBinding {
        enabled true
    }
}

dependencies {

    // default dependencies
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.activity:activity-ktx:1.3.1"
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.paging:paging-runtime-ktx:3.0.1"

    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.13.2'
    // Optional -- Robolectric environment
    // Required for instrumented tests
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    testImplementation 'androidx.test:core:1.4.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // circle imageview
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // lottie animation
    implementation "com.airbnb.android:lottie:$lottieVersion"

    // glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.8'

    // Room components
    implementation "androidx.room:room-ktx:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"

    // Lifecycle components
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"

    // Kotlin components
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.31"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1'
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"


    // retrofit2
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.2'

    // kakao login
    implementation "com.kakao.sdk:v2-user:2.8.2" // 카카오 로그인
    implementation 'com.google.android.gms:play-services-auth:19.2.0' // 구글 로그인

    // Motion Toast: https://github.com/Spikeysanju/MotionToast
    implementation 'com.github.Spikeysanju:MotionToast:1.4'

    // datastore
    implementation "androidx.datastore:datastore:1.0.0"
    implementation "com.google.protobuf:protobuf-javalite:3.14.0"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}